import type { AllowedPathType, GetAuthenticateResponse, GetConfigJsonResponse, GetSignatureResponse } from "../types";

const AUTHENTICATION_RESPONSE: GetAuthenticateResponse = {
  allowedPath: "/",
  attachmentSections: [
    {
      completed: false,
      index: 1,
      name: "insurance",
    },
    {
      completed: false,
      data: { uploadsCount: 0 },
      index: 2,
      name: "files",
    },
    {
      completed: null,
      index: 3,
      name: "survey",
    },
  ],
  caseGroupLawyerNames: "Mathis Ruff und Gina Schulz",
  charge: "Geschwindig­keitsverstoß",
  firstViewUrl: null,
  fullName: "Arthur Zakharov",
  poaData: {
    customerData: {
      agreedToLawInsuranceRequest: null,
      birthCity: "",
      birthDate: "",
      birthName: "",
      city: "",
      dropRevocationAgreement: null,
      firstName: "Arthur",
      houseNumber: "",
      isAragSwitched: null,
      isSwitched: null,
      lastName: "Zakharov",
      postCode: "",
      powerOfAttorneyAgreement: null,
      salutation: "male",
      signature: null,
      street: "",
    },
    hasInsurance: true,
    insuranceType: "default",
    latestSentPoaType: "insurance",
    showAragSwitch: false,
    showSwitch: true,
    switchPoaType: "noInsurance500",
    switchTotal: 500,
  },
  reference: "RV23.0411-177944",
  total: 0,
  uploadUuid: null,
};

export const getConfigJsonResponseMock = (protocol: string, url: string): GetConfigJsonResponse => ({
  API_URL: `${protocol}//${url}/api`,
  NODE_ENV: "production",
});

export const getSignatureResponseMock = (): GetSignatureResponse => ({
  raw: "",
});

export const getAuthenticationHomeMock = (
  firstViewUrl: string | null,
  allowedPath: AllowedPathType
): GetAuthenticateResponse => ({
  ...AUTHENTICATION_RESPONSE,
  allowedPath,
  firstViewUrl,
  attachmentSections: null,
});

export const getAuthenticationAttachmentMock = (
  firstViewUrl: string | null,
  allowedPath: AllowedPathType
): GetAuthenticateResponse => ({
  ...AUTHENTICATION_RESPONSE,
  allowedPath,
  firstViewUrl,
  poaData: null,
});

export const getAuthenticationRemunerationMock = (
  firstViewUrl: string | null,
  allowedPath: AllowedPathType
): GetAuthenticateResponse => ({
  ...AUTHENTICATION_RESPONSE,
  allowedPath,
  firstViewUrl,
  attachmentSections: null,
  total: 700,
});
